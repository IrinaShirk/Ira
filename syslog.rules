table syslogSrcType = "/opt/IBM/tivoli/netcool/omnibus/probes/linux2x86/Huawei/syslog-SrcType.lookup"
default = "Unknown"

table huawei_sev = "/opt/IBM/tivoli/netcool/omnibus/probes/linux2x86/Huawei/include-syslog/huawei.sev.syslog.lookup"
default = {"Unknown","Unknown","Unknown"}

table huaweiDefaults = "/opt/IBM/tivoli/netcool/omnibus/probes/linux2x86/Huawei/include-syslog/huawei/huawei-defaults.syslog.lookup"
default = {"Unknown","Unknown"}

######################### RZD lookup NmosDomainName ##########################
table syslogDomainName = "/opt/IBM/tivoli/netcool/omnibus/probes/linux2x86/Huawei/syslog-DomainName.lookup"
default = "Unknown"
##############################################################################

###############################################################################
# Set the following option to "1" to use details() for debugging
# or set $OPTION_EnableDetails_<vendor> = "1" to enable details() for specifc
# vendor rules only.
# Example: $OPTION_EnableDetails_ibm = "1"
###############################################################################
$OPTION_EnableDetails = "0"

    if(match($Details, ""))
    {
        discard
    }    
    else 
    if(regmatch($Details, "[Mm]essage [Rr]epeat"))
    {
        discard
    }
    else
    {
        $SrcKey = $Token4
        
        ##########
        # Add any logic necessary to modify $SrcKey before the source type
        # lookup is performed.  Primarily this is to convert IP Addresses
        # encoded as the snmpUDPAddress textual convention in [RFC1906] to
        # a common 4 octet IP Address.  Additional logic may however be added
        # if necessary.
        ##########
        
        if(regmatch($Token4, "^\[[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+\."))
        {
            $SrcKey = extract($Token4, "^\[([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)\.")
        }
        
        ##########
        # End of $SrcKey modification logic.
        ##########
        
        if(regmatch($SrcKey, "^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$"))
        {
            @Node = $SrcKey
            @NodeAlias = $SrcKey
        }
        
		###############
		# RZD NmosDomainName
		
		$SrcDomainName = lookup($SrcKey, syslogDomainName)
		@NmosDomainName = $SrcDomainName
		
		#
		###############
		
        $SrcType = lookup($SrcKey, syslogSrcType)
        
	        
        if(match($SrcType, "Unknown")) ### If the source type is unknown we will try some pattern matching to make a best guess.
        {
            if(match($Details, "dummy if statement")){} ### This provides the initial "if" statement for the "else if" statements included below.
            
            ###################################################################
            # When the source type of a message cannot be determined by a
            # lookup in the syslogSrcType the regmatch rules file Includes
            # attempt to make a "best guess" using regular expression pattern
            # matching.
            #
            # Enter regmatch rules file Includes below with the following
            # syntax:
            #
            # include "<$NCHOME>/etc/rules/include-syslog/regmatch/<rulesfile>
            # .regmatch.include.rules"
            ###################################################################
        
	    include "/opt/IBM/tivoli/netcool/omnibus/probes/linux2x86/Huawei/include-syslog/regmatch/huawei.regmatch.include.syslog.rules"
            include "/opt/IBM/tivoli/netcool/omnibus/probes/linux2x86/syslog_rules/statewatcher_syslog.rules"
            
            ###################################################################
            # End of regmatch rules file Includes
            ###################################################################
        }
        
        switch($SrcType)
        {
            case "dummy case statement": ### This will prevent syntax errors in case no includes are added below.
            
            ###################################################################
            # Enter rules file Includes below with the following syntax:
            #
            # include "<$NCHOME>/etc/rules/include-syslog/<rulesfile>.include
            # .rules"
            ###################################################################
            
            
	    include "/opt/IBM/tivoli/netcool/omnibus/probes/linux2x86/Huawei/include-syslog/huawei.include.syslog.rules"
	    #include "/opt/IBM/tivoli/netcool/omnibus/probes/linux2x86/syslog_rules/statewatcher_syslog.rules"	
           
            ###################################################################
            # End of rules file Includes
            ###################################################################
            
	    case "StateWatcher": ### Do anything

            default:
            
                @AlertGroup = "[Generic Syslog]"
                @AlertKey = ""
                @Summary = $Details
                @Severity = 1
                @Type = 1
                @Identifier = @Node + " " + @AlertGroup + " " + @Manager + " " + $Details
                
                if(match($OPTION_EnableDetails, "1")) {
                    details($*)
                }
                @ExtendedAttr = nvp_add($*)
        }
    }
    
    $OS_LocalNodeAlias = @Node
	include "/opt/IBM/tivoli/netcool/omnibus/probes/linux2x86/Huawei/include-compat/omnibus36.include.compat.rules"